name: Ubuntu

on:
  push:
    branches: [ main, 'v[0-9]+.x' ]
    paths-ignore: [ 'doc/**', '**.md' ]
  pull_request:
    paths-ignore: [ 'doc/**', '**.md' ]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: clang++ C++20
            os: ubuntu-latest
            cxx_compiler: clang++
            cxx_standard: 20
            cmake_options: ""

          - name: clang++ C++17 with sanitizer
            os: ubuntu-latest
            cxx_compiler: clang++
            cxx_standard: 17
            cmake_options: "-DUPA_TEST_SANITIZER=ON"

          - name: clang++ C++17 with valgrind
            os: ubuntu-latest
            cxx_compiler: clang++
            cxx_standard: 17
            cmake_options: "-DUPA_TEST_VALGRIND=ON"
            install: "valgrind"

          - name: g++-14 C++23
            os: ubuntu-24.04
            cxx_compiler: g++-14
            cxx_standard: 23
            cmake_options: ""

          - name: g++-12 C++20
            os: ubuntu-24.04
            cxx_compiler: g++-12
            cxx_standard: 20
            cmake_options: ""

          - name: g++ C++17 Qt
            os: ubuntu-24.04
            cxx_compiler: g++
            cxx_standard: 17
            cmake_options: "-DUPA_TEST_URL_FOR_QT=ON"
            install: "qt6-base-dev"

          - name: g++ C++17 Codecov
            os: ubuntu-22.04
            cxx_compiler: g++
            cxx_standard: 17
            cmake_options: "-DUPA_TEST_COVERAGE=ON"
            install: "lcov"
            after_test: |
              # See: https://github.com/codecov/example-cpp11-cmake
              lcov --capture --directory . --output-file coverage.info
              lcov --remove coverage.info '/usr/*' '*/deps/*' '*/test/*' --output-file coverage.info
              lcov --list coverage.info
            codecov: true

          - name: g++ C++17 amalgamated
            os: ubuntu-latest
            cxx_compiler: g++
            cxx_standard: 17
            cmake_options: "-DUPA_AMALGAMATED=ON -DUPA_BUILD_EXAMPLES=ON"
            before_cmake: tools/amalgamate.sh

          - name: g++-9 C++17
            os: ubuntu-22.04
            cxx_compiler: g++-9
            cxx_standard: 17
            cmake_options: "-DUPA_BUILD_EXAMPLES=ON"

    steps:
    - uses: actions/checkout@v4
    - name: apt-get install
      if: ${{ matrix.install }}
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.install }}
    - name: get dependencies
      run: ./init.sh
    - name: before cmake
      if: ${{ matrix.before_cmake }}
      run: ${{ matrix.before_cmake }}
    - name: cmake
      run: cmake -S . -B build -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }} -DCMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} ${{ matrix.cmake_options }}
    - name: build
      run: cmake --build build --config Release
    - name: test
      run: cd build ; ctest -C Release -V
    - name: after test
      if: ${{ matrix.after_test }}
      run: ${{ matrix.after_test }}
    - uses: codecov/codecov-action@v5
      if: ${{ matrix.codecov }}
      with:
        files: ./coverage.info
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: false
